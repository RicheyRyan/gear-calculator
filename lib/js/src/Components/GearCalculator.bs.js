// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Calculate$GearCalculator = require("../GearUtil/Calculate.bs.js");

var component = ReasonReact.reducerComponent("GearCalculator-GearCalculator");

function make(gearing, render, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              return Curry._1(self[/* send */3], /* GearDetails */[/* record */[
                            /* gearInches */Calculate$GearCalculator.gearInches(gearing),
                            /* development */Calculate$GearCalculator.metresOfDevelopment(gearing),
                            /* gainRatio */Calculate$GearCalculator.gainRatio(gearing),
                            /* skidPatches */Calculate$GearCalculator.skidPatches(gearing) | 0,
                            /* equivalentGears */Calculate$GearCalculator.equivalentGear(gearing),
                            /* cadences */Calculate$GearCalculator.generateCadences(gearing)
                          ]]);
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return Curry._1(render, self[/* state */1]);
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* gearInches */0.0,
                      /* development */0.0,
                      /* gainRatio */0.0,
                      /* skidPatches */0,
                      /* equivalentGears : [] */0,
                      /* cadences : [] */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _state) {
              return /* Update */Block.__(0, [action[0]]);
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
